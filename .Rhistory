breaks = c(-1,10,20,30,512),
labels = c("0-10","11-20","21-30","Above 30"))
titanic.add %>%
group_by(Fare2) %>%
filter(!is.na(Fare2)) %>%
summarise(P=mean(Survived))
titanic.add %>%
group_by(Fare2,Pclass,Sex) %>%
filter(!is.na(Fare2)) %>%
summarise(N=n(),P=mean(Survived)) %>%
arrange(Sex)
titanic.add %>%
group_by(Fare2,Pclass,Sex) %>%
filter(!is.na(Fare2)) %>%
summarise(N=n(),P=mean(Survived)) %>%
arrange(Sex,P)
save(titanic.add, file="./RDATA/titanic_add.RData")
load("/media/rushad/Storage/AppData/Dropbox/Docs/rStuff/miscStuff/machine_learning/TITANIC/RDATA/titanic_add.RData")
table(titanic.add$Sex)
(prop.table(table(titanic.add$Survived))
prop.table(table(titanic.add$Survived),1)
prop.table(titanic.add$Survived,1)
prop.table(table(titanic.add$Sex,titanic.add$Survived),1)
?prop.table
?sweep
head(attitude)
?attitude
ed.att <- apply(attitude, 2, median)
ed.att
data.matrix()
data.matrix(ed.att)
class(data.matrix(ed.att))
sweep(data.matrix(attitude), 2, med.att)
sweep(data.matrix(attitude), 2, ed.att)
class(ed.att)
mode(ed.att)
prop.table(table(titanic.add$Sex,titanic.add$Survived),1)
prop.table(titanic.add$Survived)
prop.table(table(titanic.add$Survived))
prop.table(table(titanic.add$Sex))
library(rpart)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=train,
method="class")
load("./RDATA/titanic_train.RData")
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=titanic.add,
method="class")
fit
plot(fit)
text(fit)
install.packages("rattle")
summary(titanic$Age)
table(titanic$Age)
prop.table(table(titanic$Sex))
prop.table(table(titanic$Survived))
knitr::opts_chunk$set(echo = TRUE)
prop.table(table(test$Sex,test$Survived),1)
prop.table(table(titanic.add$Sex,titanic.add$Survived),1)
install.packages("rattle")
install.packages("rpart.plot")
library(rattle)
library(rpart.plot)
fancyRpartPlot(fit)
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=titanic.add,
method="class")
fancyRpartPlot(fit)
Prediction <- predict(fit, test, type = "class")
Prediction <- predict(fit, titanic, type = "class")
Prediction
table(Prediction)
table(titanic$Survived)
fit
?rpart.control
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=train,
method="class",
control=rpart.control(minsplit=2, cp=0))
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
data=titanic,
method="class",
control=rpart.control(minsplit=2, cp=0))
fit
fancyRpartPlot(fit)
titanic$Name[1\]
titanic$Name[1]
strsplit(titanic$Name[1],split = "[,.]")
load("/media/rushad/Storage/AppData/Dropbox/Docs/rStuff/miscStuff/machine_learning/TITANIC/RDATA/titanic_test.RData")
titanic.test$Survived <- NA
combi <- rbind(titanic.train, titanic.test)
load("/media/rushad/Storage/AppData/Dropbox/Docs/rStuff/miscStuff/machine_learning/TITANIC/RDATA/titanic_train.RData")
combi <- rbind(titanic.train, titanic.test)
ls()
combi <- rbind(titanic, titanic.test)
dim(combi)
combi$Name <- as.character(combi$Name)
combi$Name[1]
strsplit(combi$Name[1],"[,.]"
)
x <- strsplit(combi$Name[1],"[,.]")
class(x)
x[[1]]
x[[1]][2]
sub("\\s","",x)
sub("\\s","",x[[1]][2])
comb$title <- apply(combi["Name"],1,function(x) {strsplit(x,"[,.]")})
combi$title <- apply(combi["Name"],1,function(x) {strsplit(x,"[,.]")})
View(combi)
combi$title <- apply(combi["Name"],1,function(x) {strsplit(x,"[,.]")[[1]][2]})
combi$title <- sapply(combi$Name,function(x) {strsplit(x,"[,.]")[[1]][2]})
table(combi$title)
combi$title <- sub("\\s")
head(combi$title)
combi$title <- sub("\\s","",combi$title)
head(combi$title)
table(combi$title)
sum(combi$title[combi$title %in% c("Mlle","Mme")])
combi$title[combi$title %in% c("Mlle","Mme")]
combi$title %in% c("Mlle","Mme")
sum(combi$title %in% c("Mlle","Mme"))
combi$title[combi$title %in% c("Mlle","Mme")] <- 'Mle'
combi$Title[combi$Title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'
combi$title[combi$title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'
combi$title[combi$title %in% c('Dona', 'Lady', 'the Countess', 'Jonkheer')] <- 'Lady'
class(combi$title)
combi$title <- as.factor(combi$title)
table(combi$title)
combi$familySize <- combi$SibSp + combi$Parch + 1
table(combi$familySize)
combi$surname <- sapply(combi$Name,function(x){strsplit(x,split = "[,.]")[[1]][1]})
View(combi)
combi$familyID <- paste0(familySize,surname)
combi$familyID <- paste0(combi$familySize,combi$surname)
table(familyID)
table(combi$familyID)
names(table(combi$familyID))
unique(names(table(combi$familyID)))
length(unique(names(table(combi$familyID))))
dim(combi)
combi$familyID[combi$familySize <= 2] <- 'Small'
names(table(combi$familyID))
table(combi$familyID)
table(combi$familySize)
View(data.frame(combi$familyID,combi$familySize))
View(data.frame(combi$Name,combi$familyID,combi$familySize))
data.frame(combi$surname,combi$familyID,combi$familySize) %>% arrange(surname) %>% View()
library(dplyr)
data.frame(combi$surname,combi$familyID,combi$familySize) %>% arrange(surname) %>% View()
df <- data.frame(combi$surname,combi$familyID,combi$familySize)
arrange(df,surname) %>% View()
names(df)
data.frame(surname=combi$surname,fi=combi$familyID,fs=combi$familySize) %>% arrange(surname) %>% View()
data.frame(surname=combi$surname,fi=combi$familyID,fs=combi$familySize, combi$SibSp,combi$Parch) %>% arrange(surname) %>% View()
as.data.frame(combi$familyID)
as.data.frame(table(combi$familyID))
df <- as.data.frame(table(combi$familyID))
fid <- df$Var1[df$Freq <=2]
fid
fid <- as.character(df$Var1[df$Freq <=2])
head(fid)
combi$familyID[combi$familyID %in% fid] <- "Small"
table(combi$familyID)
class(combi$familyID)
combi$familyID <- factor(combi$familyID)
train <- combi[1:891,]
test <- combi[891:1309,]
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + title + familySize + familyID,
data=train,
method="class")
fit
fancyRpartPlot(fit)
Prediction <- predict(fit, test, type = "class")
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit, file = "./RAWDATA/myfirstdtree.csv", row.names = FALSE)
dim(test)
head(test)
tail(test)
dim(test)
test <- combi[892:1309,]
Prediction <- predict(fit, test, type = "class")
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit, file = "./RAWDATA/myfirstdtree.csv", row.names = FALSE)
save(test,"./RDATA/test_tree.RData")
save(test,file = "./RDATA/test_tree.RData")
save(train,file = "./RDATA/train_tree.RData")
load("~/Dropbox/Docs/rStuff/miscStuff/machine_learning/TITANIC/RDATA/test_tree.RData")
load("~/Dropbox/Docs/rStuff/miscStuff/machine_learning/TITANIC/RDATA/train_tree.RData")
ls()
combi <- rbind(train,test)
dim(combi)
sample(1:10)
sample(1:10,replace=TRUE)
x <- sample(1:10,replace=TRUE)
x %in% 1:10
1:10 %in% x
1:10[!1:10 %in% x]
!1:10 %in% x
x
y <- 1:10
y[!1:10 %in% x]
1:10[!1:10 %in% x]
[1:10][!1:10 %in% x]
(1:10)[!1:10 %in% x]
summary(combi$Age)
install.packages("rpart")
library(rpart)
install.packages("rattle")
install.packages("rattle")
install.packages('rpart.plot')
Agefit <- rpart(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked + Title + FamilySize,
data=combi[!is.na(combi$Age),],
method="anova")
Agefit <- rpart(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked + title + familySize,
data=combi[!is.na(combi$Age),],
method="anova")
Agefit
save(combi, file="./RDATA/combi.RData")
combi$Age[is.na(combi$Age)] <- predict(Agefit, combi[is.na(combi$Age),])
summary(combi$Age)
sum(is.na(combi$Age))
summary(combi)
summary(combi$Embarked)
table(combi$Embarked)
combi$Embarked[c(62,830)] = "S"
combi$Embarked <- factor(combi$Embarked)
summary(combi$Fare)
combi$Fare[1044] <- median(combi$Fare, na.rm=TRUE)
combi$FamilyID2 <- combi$FamilyID
combi$FamilyID2 <- as.character(combi$FamilyID2)
combi$FamilyID2 <- combi$familyID
combi$FamilyID2 <- as.character(combi$FamilyID2)
combi$FamilyID2[combi$familySize <= 3] <- 'Small'
combi$FamilyID2 <- factor(combi$FamilyID2)
levels(combi$FamilyID2)
length(levels(combi$FamilyID2))
install.packages("randomForest")
library(randomForest)
rfNews()
set.seed(420)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare +
Embarked + title + familySize + FamilyID2,
data=train,
importance=TRUE,
ntree=2000)
train <- combi[1:891,]
test <- combi[892:nrow(combi,]
nrow(combi)
test <- combi[892:nrow(combi),]
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare +
Embarked + title + familySize + FamilyID2,
data=train,
importance=TRUE,
ntree=2000)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare +
Embarked + title + familySize + FamilyID2,
data=train,
importance=TRUE,
ntree=2000)
summary(train)
sum(is.na(train))
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare +
Embarked + title + familySize + FamilyID2,
data=train,
importance=TRUE,
ntree=2000)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare +
Embarked,
data=train,
importance=TRUE,
ntree=2000)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age,
data=train,
importance=TRUE,
ntree=2000)
fit <- randomForest(as.factor(Survived) ~ Pclass,
data=train,
importance=TRUE,
ntree=2000)
fit <- randomForest(as.factor(Survived) ~ Pclass+Sex,
data=train,
importance=TRUE,
ntree=2000)
fit <- randomForest(as.factor(Survived) ~ Pclass+Age,
data=train,
importance=TRUE,
ntree=2000)
summary(train$Age)
summary(train$Sex)
table(train$Sex)
head(train$Sex)
?table
table(train$Sex, useNA = "yes")
table(train$Sex, useNA = "ifany")
table(train$Sex, useNA = "always")
fit <- randomForest(as.factor(Survived) ~ Pclass+Sex,
data=train,
importance=TRUE,
ntree=2000)
table(train$Survived,useNA = "always")
table(train$Sex,useNA = "always")
class(train$Sex)
train$Sex <- factor(train$Sex)
fit <- randomForest(as.factor(Survived) ~ Pclass+Sex,
data=train,
importance=TRUE,
ntree=2000)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare +
Embarked + title + familySize + FamilyID2,
data=train,
importance=TRUE,
ntree=2000)
Prediction <- predict(fit, test, OOB=TRUE, type = "response")
test$Sex <- factor(test$Sex)
Prediction <- predict(fit, test, OOB=TRUE, type = "response")
install.packages("devtools")
install.packages("Rfacebook")
require(Rfacebook)
knitr::opts_chunk$set(echo = TRUE)
require(dplyr)
load("./RDATA/titanic_train.RData")
load("./RDATA/titanic_test.RData")
titanic.test$Survived <- 0
titanic.test$Survived[titanic.test$Sex=="female"] <- 1
titanic$child <- 0
titanic$child[titanic$Age < 18] <- 1
install.packages("tidyverse")
require(tidyverse)
library(tidyr)
library(dplyr)
mtcars %>%
gather(variable, value, gear, carb, cyl) %>%
group_by(am, variable, value) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n))
mtcars %>% gather(variable,value, gear, carb, cyl)
mtcars %>% gather(variable,value, gear, carb, cyl) %>% head()
head(mtcars)
?gather
stocks <- data_frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
gather(stocks,stock,price,-time)
gather(stocks,stock,price,-time) %>% data.frame()
ls()
titanic %>% count(child,Survived)
titanic %>% count(child,Survived) %>% group_by(Survived)  %>% mutate(prop=n/sum(n))
titanic %>% count(child,Survived) %>% group_by(Survived)  %>% mutate(prop=n/sum(n)) %>% select(-n)
titanic %>% count(child,Survived) %>% group_by(Survived)  %>% mutate(prop=n/sum(n)) %>% select(-n)  %>% spread(Survived,prop)
titanic %>% count(child,Survived) %>% group_by(Survived)  %>% mutate(prop=n/sum(n)) %>% select(-n)  %>% spread(Survived,prop, fill=0)
?spread
titanic %>% count(child,Survived) %>% group_by(child)  %>% mutate(prop=n/sum(n)) %>% select(-n)  %>% spread(Survived,prop, fill=0)
install.packages("janitor")
require(janitor)
titanic %>% crosstab(child,Survived)
titanic %>% crosstab(child,Survived,row)
titanic %>% crosstab(child,Survived,percent=row)
titanic %>% crosstab(child,Survived,percent='row')
?crosstab
titanic %>% crosstab(child,Survived,percent='row') %>% adorn_crosstab(digits=2)
titanic %>% crosstab(child,Survived,percent='row') %>% adorn_crosstab(digits=1)
titanic %>% crosstab(child,Survived,percent='row') %>% adorn_crosstab(digits=1, show_n=F)
titanic %>% crosstab(child,Survived,percent='row') %>% adorn_crosstab(digits=1, show_n=F,show_totals=T)
titanic %>%
count(child,Survived)
titanic %>%
count(child,Survived) %>%
group_by(child) %>%
mutate(prop=n/sum(n))
titanic %>%
count(child,Survived) %>%
group_by(child) %>%
mutate(prop=n/sum(n)) %>%
select(-n) %>%
spread(Survived,prop)
require(janitor)
titanic %>%
crosstab(child, Survived) %>%
adorn_crosstab(digits=1,show_totals = F,show_n=F)
titanic %>%
filter(child==1,Age> 18)
median(titanic$Age)
median(titanic$Age,na.rm = T)
glimpse(titanic)
sum(is.na(titanic$Age))
filter(titanic,is.na(Age),child==1)
filter(titanic,is.na(Age),child==0)
filter(titanic,is.na(Age),child==1)
filter(titanic,!is.na(Age),child==1)
filter(titanic,!is.na(Age),child==1) %>% select(child,Age)
filter(titanic,!is.na(Age),child==1) %>% select(child,Age) %>% with(.,summarise(Age))
filter(titanic,!is.na(Age),child==1) %>% select(child,Age) %>% with(.,summary(Age))
titanic <- titanic %>%
mutate(age_cat=cut(Age,
breaks=c(seq(0,60,by=10),90),
labels=paste(c(paste(seq(1,60,by=10),
seq(10,60,by=10),
sep="-"),"Above 60"),"years")))
table(titanic$age_cat)
titanic %>% crosstab(age_cat,Survived)
titanic <- titanic %>%
mutate(Age=replace(Age,is.na(Age),median(Age,na.rm=T)))
titanic <- titanic %>%
mutate(age_cat=cut(Age,
breaks=c(seq(0,60,by=10),90),
labels=paste(c(paste(seq(1,60,by=10),
seq(10,60,by=10),
sep="-"),"Above 60"),"years")))
titanic %>% crosstab(age_cat,Survived)
titanic %>% crosstab(age_cat,Survived,percent="row")
titanic %>% crosstab(age_cat,Survived,percent="row") %>% adorn_crosstab(digits=1,show_n=F)
pandoc.installed <- system('pandoc -v')==0
pandoc.location <- Sys.which("pandoc")
if(pandoc.location == ""){
print("pandoc not available")
}else{
print("pandoc available")
}
pandoc.location
knitr::opts_chunk$set(echo = TRUE)
load("./RDATA/titanic_train.RData")
load("./RDATA/titanic_test.RData")
titanic %>%
count(child,Survived) %>%
group_by(child) %>%
mutate(prop=n/sum(n)) %>%
select(-n) %>%
spread(Survived,prop)
library(dplyr)
titanic %>%
count(child,Survived) %>%
group_by(child) %>%
mutate(prop=n/sum(n)) %>%
select(-n) %>%
spread(Survived,prop)
library(tidyr)
titanic %>%
count(child,Survived) %>%
group_by(child) %>%
mutate(prop=n/sum(n)) %>%
select(-n) %>%
spread(Survived,prop)
titanic %>%
count(child,Survived) %>%
group_by(child) %>%
mutate(prop=n/sum(n))
titanic %>%
count(child,Survived)
ls()
library(janitor)
titanic %>%
count(child,Survived) %>%
group_by(child) %>%
mutate(prop=n/sum(n)) %>%
select(-n) %>%
spread(Survived,prop)
head(Titanic)
head(titanic)
titanic %>%
count(child,Survived)
titanic %>%
count(child,Survived)
titanic$child <- 0
titanic$child[titanic$Age < 18] <- 1
titanic %>%
filter(is.na(Age)) %>%
select(child,Age)
titanic %>%
count(child,Survived)
titanic %>%
crosstab(child, Survived) %>%
adorn_crosstab(digits=1,show_totals = F,show_n=F)
titanic <- titanic %>%
mutate(Age=replace(Age,is.na(Age),median(Age,na.rm=T)))
titanic <- titanic %>%
mutate(Age=replace(Age,is.na(Age),median(Age,na.rm=T)))
titanic %>%
filter(child==1,Age> 18)
titanic <- titanic %>%
mutate(age_cat=cut(Age,
breaks=c(seq(0,60,by=10),90),
labels=paste(c(paste(seq(1,60,by=10),
seq(10,60,by=10),
sep="-"),"Above 60"),"years")))
save(titanic,file="./RDATA/titanic_child.RData")
titanic_child <- titanic %>%
mutate(age_cat=cut(Age,
breaks=c(seq(0,60,by=10),90),
labels=paste(c(paste(seq(1,60,by=10),
seq(10,60,by=10),
sep="-"),"Above 60"),"years")))
save(titanic_child,file="./RDATA/titanic_child.RData")
load("./RDATA/titanic_add.RData")
load("./RDATA/age_survive_df.RData")
ls()
library(ggplot2)
ggplot(age.survive.df,aes(x=row.names(age.survive.df),y=S))+
geom_bar(stat = "identity",
fill="blue")
ggplot(titanic.add,aes(x=age_cat,fill=as.character(Survived)))+geom_bar()
ggplot(titanic.add,aes(x=age_cat,fill=as.character(Survived)))+
geom_bar(position="fill")
install.packages("janitor")
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
load("./RDATA/titanic_train.RData")
load("./RDATA/titanic_test.RData")
prop.table(table(titanic$Survived))
